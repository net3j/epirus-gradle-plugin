plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.41'
    id 'com.gradle.plugin-publish' version '0.10.1'
    id 'com.jfrog.bintray' version '1.8.4'
    id 'java-gradle-plugin'
    id 'java'

    // Required for JFrog Artifactory repository
    id 'jacoco'
    id 'maven-publish'

    // Required for Maven Nexus repository
    id 'maven'
    id 'signing'
    id 'idea'
}

description = 'Gradle plugin providing tasks for the Epirus platform.'
sourceCompatibility = JavaVersion.VERSION_1_8

jacoco {
    toolVersion = '0.8.2' // See http://www.eclemma.org/jacoco/.
}

jacocoTestReport {
    reports {
        xml.enabled = true
    }
}

ext {
    web3jVersion = '4.3.0'
    solidityPluginVersion = '0.1.6'
    jerseyVersion = '2.29'
    junitVersion = '4.12'
    wiremockVersion = '2.23.2' 

    ossrhUsername = project.hasProperty('ossrhUsername') ? project.property('ossrhUsername') : System.getenv('OSSRH_USERNAME')
    ossrhPassword = project.hasProperty('ossrhPassword') ? project.property('ossrhPassword') : System.getenv('OSSRH_PASSWORD')
    ossrhRepoUrl = project.hasProperty('ossrhRepoUrl') ? project.property('ossrhRepoUrl') : System.getenv('OSSRH_REPO_URL')
    ossrhSnapshotRepoUrl = project.hasProperty('ossrhSnapshotRepoUrl') ? project.property('ossrhSnapshotRepoUrl') : System.getenv('OSSRH_SNAPSHOT_REPO_URL')
    bintrayUser = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    bintrayKey = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    bintrayGpgPassphrase = project.hasProperty('bintrayGpgPassphrase') ? project.property('bintrayGpgPassphrase') : System.getenv('BINTRAY_GPG_PASSPHRASE')
    isSnapshotVersion = project.version.endsWith("-SNAPSHOT")
    manualRelease = project.hasProperty('manualRelease') ? project.property('manualRelease').toBoolean() : false
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.web3j:web3j-gradle-plugin:$web3jVersion"
    implementation "org.web3j:solidity-gradle-plugin:$solidityPluginVersion"
    implementation "de.undercouch:gradle-download-task:4.1.1"
    implementation "org.glassfish.jersey.core:jersey-client:$jerseyVersion"
    implementation "org.glassfish.jersey.media:jersey-media-multipart:$jerseyVersion"
    
    runtimeOnly "org.glassfish.jersey.inject:jersey-hk2:$jerseyVersion"
    runtimeOnly "org.glassfish.jersey.media:jersey-media-json-jackson:$jerseyVersion"
    runtimeOnly 'javax.activation:javax.activation-api:1.2.0'
    
    testCompile "junit:junit:$junitVersion"
    testCompile "com.github.tomakehurst:wiremock-jre8-standalone:$wiremockVersion"
}

gradlePlugin {
    plugins {
        epirus {
            id = 'io.epirus'
            implementationClass = 'io.epirus.gradle.plugin.EpirusPlugin'
        }
    }
}

pluginBundle {
    website = 'https://web3labs.com/'
    vcsUrl = 'https://github.com/web3j/epirus-gradle-plugin'
    description = 'Gradle plugin providing tasks for the Epirus platform.'
    tags = ['ethereum', 'web3.js', 'web3j', 'epirus', 'web3labs']
    plugins {
        epirus {
            // id is captured from java-gradle-plugin configuration
            displayName = project.description
        }
    }
}

tasks.withType(Test) {
    reports.html.destination file("${reporting.baseDir}/${name}")
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom {
                name = project.name
                description = project.description
                url = "https://github.com/web3j/epirus-gradle-plugin"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                        distribution = "repo"
                    }
                }
                developers {
                    developer {
                        id = "conor10"
                        name = "Conor Svensson"
                        email = "conor10@gmail.com"
                    }
                    developer {
                        id = "xaviarias"
                        name = "Xavier Arias"
                        email = "xavi.arias.segui@gmail.com"
                    }
                }
                scm {
                    url = "https://github.com/web3j/epirus-gradle-plugin"
                    connection = "scm:https://github.com/web3j/epirus-gradle-plugin.git"
                    developerConnection = "scm:git://github.com/web3j/epirus-gradle-plugin.git"
                }
            }
        }
    }
    repositories {
        maven {
            name = 'ossrh'
            url = ossrhRepoUrl
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
        maven {
            name = 'ossrhSnapshots'
            url = ossrhSnapshotRepoUrl
            mavenContent {
                snapshotsOnly()
            }
            credentials {
                username ossrhUsername
                password ossrhPassword
            }
        }
    }
}

bintray {
    user = bintrayUser
    key = bintrayKey
    publications = ['mavenJava']
    publish = true
    pkg {
        repo = 'maven'
        name = 'epirus-gradle-plugin'
        desc = project.description
        userOrg = 'web3j'
        licenses = ['Apache-2.0']
        issueTrackerUrl = 'https://github.com/web3j/epirus-gradle-plugin/issues'
        vcsUrl = 'https://github.com/web3j/epirus-gradle-plugin.git'
        websiteUrl = 'http://web3j.io'
        publicDownloadNumbers = true
        version {
            gpg {
                sign = true
                passphrase = bintrayGpgPassphrase
            }
            mavenCentralSync {
                sync = false
                user = ossrhUsername
                password = ossrhPassword
                close = '1'
            }
        }
    }
}
